import pandas as pd
file_path='walmart.csv'
df =pd.read_csv('/walmart.csv')

print("Dataset Info:")
print(df.info())
]
print("Dataset Info:")
print(df.info())
Dataset Info:
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 550068 entries, 0 to 550067
Data columns (total 10 columns):
 #   Column                      Non-Null Count   Dtype 
---  ------                      --------------   ----- 
 0   User_ID                     550068 non-null  int64 
 1   Product_ID                  550068 non-null  object
 2   Gender                      550068 non-null  object
 3   Age                         550068 non-null  object
 4   Occupation                  550068 non-null  int64 
 5   City_Category               550068 non-null  object
 6   Stay_In_Current_City_Years  550068 non-null  object
 7   Marital_Status              550068 non-null  int64 
 8   Product_Category            550068 non-null  int64 
 9   Purchase                    550068 non-null  int64 
dtypes: int64(5), object(5)
memory usage: 42.0+ MB
None

print("\nMissing Values:")
print(df.isnull().sum())
Missing Values:
User_ID                       0
Product_ID                    0
Gender                        0
Age                           0
Occupation                    0
City_Category                 0
Stay_In_Current_City_Years    0
Marital_Status                0
Product_Category              0
Purchase                      0
dtype: int64

print("\nsummary statitics:")
print(df.describe())
]

print("\nsummary statitics:")
print(df.describe())

summary statitics:
            User_ID     Occupation  Marital_Status  Product_Category  \
count  5.500680e+05  550068.000000   550068.000000     550068.000000   
mean   1.003029e+06       8.076707        0.409653          5.404270   
std    1.727592e+03       6.522660        0.491770          3.936211   
min    1.000001e+06       0.000000        0.000000          1.000000   
25%    1.001516e+06       2.000000        0.000000          1.000000   
50%    1.003077e+06       7.000000        0.000000          5.000000   
75%    1.004478e+06      14.000000        1.000000          8.000000   
max    1.006040e+06      20.000000        1.000000         20.000000   

            Purchase  
count  550068.000000  
mean     9263.968713  
std      5023.065394  
min        12.000000  
25%      5823.000000  
50%      8047.000000  
75%     12054.000000  
max     23961.000000  

print("\nUnique Values:") 
print({ 
    "Gender": df["Gender"].unique(), 
    "Age": df["Age"].unique(),
    "City_Category": df["City_Category"].unique(), 
    "Stay_In_Current_City_Years": df["Stay_In_Current_City_Years"].unique() 
})
print("\nUnique Values:") 
print({ 
    "Gender": df["Gender"].unique(), 
    "Age": df["Age"].unique(),
    "City_Category": 
    df["City_Category"].unique(), 
    "Stay_In_Current_City_Years": 
    df["Stay_In_Current_City_Years"].unique() })
Unique Values:
{'Gender': array(['F', 'M'], dtype=object), 'Age': array(['0-17', '55+', '26-35', '46-50', '51-55', '36-45', '18-25'],
      dtype=object), 'City_Category': array(['A', 'C', 'B'], dtype=object), 'Stay_In_Current_City_Years': array(['2', '4+', '3', '1', '0'], dtype=object)}

Unique Values:
{'Gender': array(['F', 'M'], dtype=object), 'Age': array(['0-17', '55+', '26-35', '46-50', '51-55', '36-45', '18-25'],
      dtype=object), 'City_Category': array(['A', 'C', 'B'], dtype=object), 'Stay_In_Current_City_Years': array(['2', '4+', '3', '1', '0'], dtype=object)}
print("\nGender Distribution:")
print(df["Gender"].value_counts())

print("\nCity Category Distribution:") 
print(df["City_Category"].value_counts())
Gender Distribution:
Gender
M    414259
F    135809
Name: count, dtype: int64

City Category Distribution:
City_Category
B    231173
C    171175
A    147720
Name: count, dtype: int64

female_customers = df [df["Gender"] 
== "F"] 
print("\nFemale Customers Data (First 5 rows):") 
print(female_customers.head())


Female Customers Data (First 5 rows):
    User_ID Product_ID Gender    Age  Occupation City_Category  \
0   1000001  P00069042      F   0-17          10             A   
1   1000001  P00248942      F   0-17          10             A   
2   1000001  P00087842      F   0-17          10             A   
3   1000001  P00085442      F   0-17          10             A   
14  1000006  P00231342      F  51-55           9             A   

   Stay_In_Current_City_Years  Marital_Status  Product_Category  Purchase  
0                           2               0                 3      8370  
1                           2               0                 1     15200  
2                           2               0                12      1422  
3                           2               0                12      1057  
14                          1               0                 5      5378 

age_26_35 = df[df["Age"] == "26-35"]  
print("\nUsers Aged 26-35 (First 5 rows):") 
print(age_26_35.head())


Users Aged 26-35 (First 5 rows):
    User_ID Product_ID Gender    Age  Occupation City_Category  \
5   1000003  P00193542      M  26-35          15             A   
9   1000005  P00274942      M  26-35          20             A   
10  1000005  P00251242      M  26-35          20             A   
11  1000005  P00014542      M  26-35          20             A   
12  1000005  P00031342      M  26-35          20             A   

   Stay_In_Current_City_Years  Marital_Status  Product_Category  Purchase  
5                           3               0                 1     15227  
9                           1               1                 8      7871  
10                          1               1                 5      5254  
11                          1               1                 8      3957  
12                          1               1                 8      6073 

female_customers.to_csv('female_customers.csv', index=False)
age_26_35.to_csv('age_26_35.csv', index=False)
